---
import Main from "../layouts/Main.astro";
const pageTitle = "About me | Joanna Hosking - Web Developer";
import { Image } from "astro:assets";
import me from "../assets/images/me.jpg";
const expertise = [
  "html",
  "css/sass",
  "javascript",
  "typescript",
  "php",
  "wordpress",
  "react",
  "astro",
  "motion",
  "gsap",
  "express.js",
  "webpack",
  "git",
  "ux/ui",
  "figma",
  "adobe",
];
---

<Main pageTitle={pageTitle}>
  <section>
    <h1>About me</h1>
    <figure class="scroll">
      <Image src={me} alt="" loading="lazy" decoding="async" />
    </figure>
    <p>
      I'm a web developer based in the UK. You can currently find me working at <a
        href="https://cooperfields.co.uk"
        target="_blank"
        rel="noreferrer">Cooperfields</a
      >.
    </p>
    <p>
      I'm a University of Arizona alumni <em>(go Wildcats!)</em> and am now based
      in the West Midlands. I love diving into new technologies and have a particular
      fondness for spotting progressive enhancement in the wild.
    </p>
    <p>
      When I'm not writing code, you'll likely find me sunbathing in the garden
      with my dog, gaming with my husband, or strumming the guitar.
    </p>
    <p>
      If you'd like to connect, you can reach me at <a
        href="mailto:hello@joannahosking.com">hello@joannahosking.com</a
      >.
    </p>
  </section>
  <section>
    <h2>Experience</h2>
    <ul class="experience">
      <li>
        <h3>Cooperfields</h3>
        <span class="title">Web Developer</span>
        <span class="date">2021-present</span>
      </li>
      <li>
        <h3>Freelance</h3>
        <span class="title">Web Developer</span>
        <span class="date">2019-2021</span>
      </li>
      <li>
        <h3>Automatit</h3>
        <span class="title">Front-End Developer</span>
        <span class="date">2018-2019</span>
      </li>
    </ul>
  </section>
  <section>
    <h2>Expertise</h2>
    <ul class="expertise">
      {expertise.map((item) => <li>{item}</li>)}
    </ul>
  </section>
</Main>

<style>
  .scroll {
    display: block;
    aspect-ratio: 10 / 4;
    overflow: hidden;

    img {
      display: block;
      width: 100%;
      height: auto;
      aspect-ratio: 2 / 1;
      object-fit: cover;
    }
  }

  .experience {
    list-style-type: none;
    margin: 0;
    padding: 0;

    li {
      display: grid;
      grid-template-columns: 1fr max-content;
      gap: 0 1rem;
      margin-block: 0.5rem;

      h3 {
        margin: 0;
      }

      .title {
        grid-row: 2;
        font-style: italic;
      }
    }
  }

  .expertise {
    list-style-type: none;
    display: flex;
    flex-wrap: wrap;
    justify-content: flex-start;
    align-items: center;
    gap: 0.5rem;
    margin: 0;
    padding: 0;

    li {
      position: relative;
      display: block;
      padding: 0.125rem 0.5rem;
      border-radius: 2px;
      font-size: 0.9rem;
      text-transform: uppercase;
      white-space: nowrap;

      &:after {
        content: "";
        position: absolute;
        inset: 0;
        background-color: var(--accent-color);
        opacity: 0.125;
        z-index: -1;
      }
    }
  }
</style>

<script>
  import { gsap } from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";
  gsap.registerPlugin(ScrollTrigger);

  function initScrollAnimation() {
    if (window.matchMedia("(prefers-reduced-motion: reduce)").matches) return;

    const figure = document.querySelector(".scroll") as HTMLElement;
    const img = figure?.querySelector("img") as HTMLElement;

    if (!figure || !img) return;

    gsap.to(img, {
      scrollTrigger: {
        trigger: figure,
        start: "top top",
        end: "bottom top",
        scrub: 1.5,
        invalidateOnRefresh: true,
        markers: false,
      },
      y: figure.offsetHeight - img.offsetHeight,
      ease: "none",
    });
  }

  function initListAnimation() {
    if (window.matchMedia("(prefers-reduced-motion: reduce)").matches) return;

    const listItems = document.querySelectorAll(
      ".expertise li"
    ) as NodeListOf<HTMLElement>;
    const strength = 3;
    const closeness = 200;

    window.addEventListener("mousemove", (e: MouseEvent) => {
      listItems.forEach((item) => {
        const rect = item.getBoundingClientRect();
        const centerX = rect.left + rect.width / 2;
        const centerY = rect.top + rect.height / 2;
        const dx = e.clientX - centerX;
        const dy = e.clientY - centerY;
        const distance = Math.sqrt(dx * dx + dy * dy);

        if (distance < closeness) {
          const angle = Math.atan2(dy, dx);
          const moveX =
            -Math.cos(angle) * strength * (1 - distance / closeness);
          const moveY =
            -Math.sin(angle) * strength * (1 - distance / closeness);

          gsap.to(item, {
            scale: 1.02,
            opacity: 0.9,
            x: moveX,
            y: moveY,
            ease: "sine.out",
            duration: 0.5,
          });
        } else {
          gsap.to(item, {
            scale: 1,
            opacity: 1,
            x: 0,
            y: 0,
            duration: 0.8,
            ease: "sine.inOut",
          });
        }
      });
    });
  }

  initScrollAnimation();
  initListAnimation();

  document.addEventListener("astro:after-swap", () => {
    ScrollTrigger.refresh();
    initScrollAnimation();
    initListAnimation();
  });
</script>
